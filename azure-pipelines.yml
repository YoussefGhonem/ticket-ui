# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- dev

variables:
  buildConfiguration: 'Release'
  isDev: $[eq(variables['Build.SourceBranch'], 'refs/heads/dev')]
  isStaging: $[eq(variables['Build.SourceBranch'], 'refs/heads/UAT')]
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  imageRepository: 'fortteck/ticket-management-ui'
  dockerfilePath: 'Dockerfile'
  containerRegistry: 'FortTeckDockerHubRegistry'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: Development
  condition: and(succeeded(), eq(variables.isDev, 'true'))
  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      displayName: 'Angular CLI 13.2.5'
      inputs:
        command: custom
        verbose: false
        customCommand: 'install -g @angular/cli@13.2.5'

    - task: CmdLine@2
      displayName: 'Yarn'
      inputs:
        script: |
          yarn install
          yarn
          yarn run build
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      displayName: 'Copy File to: $(TargetFolder)'
      inputs:
        SourceFolder: "$(Build.SourcesDirectory)"
        Contents: |
          nginx.conf
          dist/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'


    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        buildContext: $(Build.ArtifactStagingDirectory)
        containerRegistry: $(containerRegistry)
        repository: $(imageRepository)
        tags: |
          latest
          dev_$(Build.BuildNumber)
        Dockerfile: $(dockerfilePath)
    - task: Docker@2
      displayName: 'Push Image to Registry'
      inputs:
        command: 'push'
        containerRegistry: $(containerRegistry)
        repository: $(imageRepository)
        tags: | 
          latest
          dev_$(Build.BuildNumber)

